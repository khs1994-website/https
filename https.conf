server {
       # listen 80 default_server;
       listen 80;
       server_name www.khs1994.com;
       return 301 https://$host$request_uri;
}

server {
        listen 443 ssl http2;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

        server_name     www.khs1994.com;
        root            /app/admin/public;
        error_page 404  https://404.khs1994.com;

        ssl_certificate      conf.d/ssl/www.khs1994.com.cer;
        ssl_certificate_key  conf.d/ssl/www.khs1994.com.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_session_tickets  off;

        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers  on;

        # OCSP Stapling ---
        # fetch OCSP records from URL in ssl_certificate and cache them
        ssl_stapling on;
        ssl_stapling_verify on;

        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
        #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

        charset utf-8;

        location / {
             try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php/?.*$ {
            fastcgi_pass     php7:9000;
            # fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            # include        fastcgi_params;
            include          fastcgi.conf;
        }
}
